ACTIVITIES = ["ups", "jog"]
PARTICIPANTS = [0, ]
traj_lens = range(10, 150 + 1, 20)
RAW_DATA_DIR = "../../data"
ACT_DATA_DIR = "data"
CHECKPOINTS_DIR = "checkpoints"
RESULT_DIR = "results"
# dir to pipeline configs is "config"

configfile: "snakemake_config.yaml"

rule all_classify:
    input:
        expand(
            "tmp/classify/subj_{subj_id}_classify_table.csv",
            subj_id=PARTICIPANTS
        )

rule all_train:
    input:
        expand(
            f"tmp/{CHECKPOINTS_DIR}/subj_{{subj_id}}/{{act}}_checkpoint.ckpt",
            act=ACTIVITIES, subj_id=PARTICIPANTS
        )

rule all_data:
    input:
        expand(
            f"tmp/{ACT_DATA_DIR}/subj_{{subj_id}}/{{act}}/train.pkl", 
            act=ACTIVITIES, subj_id=PARTICIPANTS
        )

rule all:
    input:
        f"{RESULT_DIR}/agr_metrics.csv",
        f"{RESULT_DIR}/agr_metrics.html",
        f"{RESULT_DIR}/recall_hist.html"

rule make_results:
    input:
        "scripts/collect_metrics.py",
        expand("tmp/classify/subj_{subj_id}_classify_table.csv", subj_id=PARTICIPANTS),
        config_wandb_path = "config/wandb.yaml"
    output:
        f"{RESULT_DIR}/agr_metrics.csv",
        f"{RESULT_DIR}/agr_metrics.html",
        f"{RESULT_DIR}/recall_hist.html"
    shell: f"""
        python scripts/collect_metrics.py {{input.config_wandb_path}} tmp/classify \
        {RESULT_DIR}
    """

rule classify:
    input:
        "scripts/classify.py",
        [f"tmp/{CHECKPOINTS_DIR}/subj_{{subj_id}}/{act}_checkpoint.ckpt" for act in ACTIVITIES],
        [f"tmp/{ACT_DATA_DIR}/subj_{{subj_id}}/{act}/test.pkl" for act in ACTIVITIES],
        [f"config/{act}/train.yaml" for act in ACTIVITIES],
        config_wandb_path = "config/wandb.yaml"
    output:
        "tmp/classify/subj_{subj_id}_classify_table.csv"
    shell:
        f"""
        python scripts/classify.py {{wildcards.subj_id}} tmp/{ACT_DATA_DIR}/subj_{{wildcards.subj_id}} \
        tmp/{CHECKPOINTS_DIR}/subj_{{wildcards.subj_id}} {{input.config_wandb_path}} tmp/classify
        """

rule train:
    input:
        "scripts/train_on_activity.py",
        train_dataset = f"tmp/{ACT_DATA_DIR}/subj_{{subj_id}}/{{act}}/train.pkl",
        test_dataset = f"tmp/{ACT_DATA_DIR}/subj_{{subj_id}}/{{act}}/test.pkl",
        config_train = "config/{act}/train.yaml",
        config_data = "config/{act}/data.yaml",
        config_wandb_path = "config/wandb.yaml"
    output:
        f"tmp/{CHECKPOINTS_DIR}/subj_{{subj_id}}/{{act}}_checkpoint.ckpt"
    shell:
        f"""
        python scripts/train_on_activity.py {{wildcards.subj_id}} {{input.config_train}} \
        {{input.config_data}} {{input.train_dataset}} {{input.test_dataset}} \
        {{input.config_wandb_path}} tmp/{CHECKPOINTS_DIR}/subj_{{wildcards.subj_id}}
        """

rule make_dataset:
    input:
        "scripts/make_dataset.py",
        config_path = "config/{act}/data.yaml",
        config_wandb_path = "config/wandb.yaml"
    output:
        "tmp/data/subj_{subj_id}/{act}/N_{traj_len}/test.pkl",
        "tmp/data/subj_{subj_id}/{act}/N_{traj_len}/train.pkl",
    shell:
        """
        python scripts/make_dataset.py {wildcards.subj_id} {wildcards.act} \
        {wildcards.traj_len} {input.config_path} {config[raw_data_dir]} \
        tmp/data/subj_{{wildcards.subj_id}}/{{wildcards.act}}/N_{wildcards.traj_len}
        """

rule configure_wandb:
    input:
        "scripts/wandb_config.py"
    output:
        "config/wandb.yaml"
    script:
        "scripts/wandb_config.py"
